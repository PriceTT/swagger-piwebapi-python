# coding: utf-8

"""
    PI Web API 2017 Swagger Spec

    Swagger Spec file that describes PI Web API

    OpenAPI spec version: 1.9.0.266
    Contact: techsupport@osisoft.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class InlineResponse20046Items(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, id=None, last_refresh_time=None, will_refresh_after=None, scheduled_expiration_time=None, user=None):
        """
        InlineResponse20046Items - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'str',
            'last_refresh_time': 'datetime',
            'will_refresh_after': 'datetime',
            'scheduled_expiration_time': 'datetime',
            'user': 'str'
        }

        self.attribute_map = {
            'id': 'Id',
            'last_refresh_time': 'LastRefreshTime',
            'will_refresh_after': 'WillRefreshAfter',
            'scheduled_expiration_time': 'ScheduledExpirationTime',
            'user': 'User'
        }

        self._id = id
        self._last_refresh_time = last_refresh_time
        self._will_refresh_after = will_refresh_after
        self._scheduled_expiration_time = scheduled_expiration_time
        self._user = user

    @property
    def id(self):
        """
        Gets the id of this InlineResponse20046Items.

        :return: The id of this InlineResponse20046Items.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this InlineResponse20046Items.

        :param id: The id of this InlineResponse20046Items.
        :type: str
        """

        self._id = id

    @property
    def last_refresh_time(self):
        """
        Gets the last_refresh_time of this InlineResponse20046Items.

        :return: The last_refresh_time of this InlineResponse20046Items.
        :rtype: datetime
        """
        return self._last_refresh_time

    @last_refresh_time.setter
    def last_refresh_time(self, last_refresh_time):
        """
        Sets the last_refresh_time of this InlineResponse20046Items.

        :param last_refresh_time: The last_refresh_time of this InlineResponse20046Items.
        :type: datetime
        """

        self._last_refresh_time = last_refresh_time

    @property
    def will_refresh_after(self):
        """
        Gets the will_refresh_after of this InlineResponse20046Items.

        :return: The will_refresh_after of this InlineResponse20046Items.
        :rtype: datetime
        """
        return self._will_refresh_after

    @will_refresh_after.setter
    def will_refresh_after(self, will_refresh_after):
        """
        Sets the will_refresh_after of this InlineResponse20046Items.

        :param will_refresh_after: The will_refresh_after of this InlineResponse20046Items.
        :type: datetime
        """

        self._will_refresh_after = will_refresh_after

    @property
    def scheduled_expiration_time(self):
        """
        Gets the scheduled_expiration_time of this InlineResponse20046Items.

        :return: The scheduled_expiration_time of this InlineResponse20046Items.
        :rtype: datetime
        """
        return self._scheduled_expiration_time

    @scheduled_expiration_time.setter
    def scheduled_expiration_time(self, scheduled_expiration_time):
        """
        Sets the scheduled_expiration_time of this InlineResponse20046Items.

        :param scheduled_expiration_time: The scheduled_expiration_time of this InlineResponse20046Items.
        :type: datetime
        """

        self._scheduled_expiration_time = scheduled_expiration_time

    @property
    def user(self):
        """
        Gets the user of this InlineResponse20046Items.

        :return: The user of this InlineResponse20046Items.
        :rtype: str
        """
        return self._user

    @user.setter
    def user(self, user):
        """
        Sets the user of this InlineResponse20046Items.

        :param user: The user of this InlineResponse20046Items.
        :type: str
        """

        self._user = user

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, InlineResponse20046Items):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

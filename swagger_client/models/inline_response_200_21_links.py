# coding: utf-8

"""
    PI Web API 2017 Swagger Spec

    Swagger Spec file that describes PI Web API

    OpenAPI spec version: 1.9.0.266
    Contact: techsupport@osisoft.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class InlineResponse20021Links(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, _self=None, databases=None, security_identities=None, security_mappings=None, unit_classes=None, analysis_rule_plug_ins=None, time_rule_plug_ins=None, security=None, security_entries=None):
        """
        InlineResponse20021Links - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            '_self': 'str',
            'databases': 'str',
            'security_identities': 'str',
            'security_mappings': 'str',
            'unit_classes': 'str',
            'analysis_rule_plug_ins': 'str',
            'time_rule_plug_ins': 'str',
            'security': 'str',
            'security_entries': 'str'
        }

        self.attribute_map = {
            '_self': 'Self',
            'databases': 'Databases',
            'security_identities': 'SecurityIdentities',
            'security_mappings': 'SecurityMappings',
            'unit_classes': 'UnitClasses',
            'analysis_rule_plug_ins': 'AnalysisRulePlugIns',
            'time_rule_plug_ins': 'TimeRulePlugIns',
            'security': 'Security',
            'security_entries': 'SecurityEntries'
        }

        self.__self = _self
        self._databases = databases
        self._security_identities = security_identities
        self._security_mappings = security_mappings
        self._unit_classes = unit_classes
        self._analysis_rule_plug_ins = analysis_rule_plug_ins
        self._time_rule_plug_ins = time_rule_plug_ins
        self._security = security
        self._security_entries = security_entries

    @property
    def _self(self):
        """
        Gets the _self of this InlineResponse20021Links.

        :return: The _self of this InlineResponse20021Links.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """
        Sets the _self of this InlineResponse20021Links.

        :param _self: The _self of this InlineResponse20021Links.
        :type: str
        """

        self.__self = _self

    @property
    def databases(self):
        """
        Gets the databases of this InlineResponse20021Links.

        :return: The databases of this InlineResponse20021Links.
        :rtype: str
        """
        return self._databases

    @databases.setter
    def databases(self, databases):
        """
        Sets the databases of this InlineResponse20021Links.

        :param databases: The databases of this InlineResponse20021Links.
        :type: str
        """

        self._databases = databases

    @property
    def security_identities(self):
        """
        Gets the security_identities of this InlineResponse20021Links.

        :return: The security_identities of this InlineResponse20021Links.
        :rtype: str
        """
        return self._security_identities

    @security_identities.setter
    def security_identities(self, security_identities):
        """
        Sets the security_identities of this InlineResponse20021Links.

        :param security_identities: The security_identities of this InlineResponse20021Links.
        :type: str
        """

        self._security_identities = security_identities

    @property
    def security_mappings(self):
        """
        Gets the security_mappings of this InlineResponse20021Links.

        :return: The security_mappings of this InlineResponse20021Links.
        :rtype: str
        """
        return self._security_mappings

    @security_mappings.setter
    def security_mappings(self, security_mappings):
        """
        Sets the security_mappings of this InlineResponse20021Links.

        :param security_mappings: The security_mappings of this InlineResponse20021Links.
        :type: str
        """

        self._security_mappings = security_mappings

    @property
    def unit_classes(self):
        """
        Gets the unit_classes of this InlineResponse20021Links.

        :return: The unit_classes of this InlineResponse20021Links.
        :rtype: str
        """
        return self._unit_classes

    @unit_classes.setter
    def unit_classes(self, unit_classes):
        """
        Sets the unit_classes of this InlineResponse20021Links.

        :param unit_classes: The unit_classes of this InlineResponse20021Links.
        :type: str
        """

        self._unit_classes = unit_classes

    @property
    def analysis_rule_plug_ins(self):
        """
        Gets the analysis_rule_plug_ins of this InlineResponse20021Links.

        :return: The analysis_rule_plug_ins of this InlineResponse20021Links.
        :rtype: str
        """
        return self._analysis_rule_plug_ins

    @analysis_rule_plug_ins.setter
    def analysis_rule_plug_ins(self, analysis_rule_plug_ins):
        """
        Sets the analysis_rule_plug_ins of this InlineResponse20021Links.

        :param analysis_rule_plug_ins: The analysis_rule_plug_ins of this InlineResponse20021Links.
        :type: str
        """

        self._analysis_rule_plug_ins = analysis_rule_plug_ins

    @property
    def time_rule_plug_ins(self):
        """
        Gets the time_rule_plug_ins of this InlineResponse20021Links.

        :return: The time_rule_plug_ins of this InlineResponse20021Links.
        :rtype: str
        """
        return self._time_rule_plug_ins

    @time_rule_plug_ins.setter
    def time_rule_plug_ins(self, time_rule_plug_ins):
        """
        Sets the time_rule_plug_ins of this InlineResponse20021Links.

        :param time_rule_plug_ins: The time_rule_plug_ins of this InlineResponse20021Links.
        :type: str
        """

        self._time_rule_plug_ins = time_rule_plug_ins

    @property
    def security(self):
        """
        Gets the security of this InlineResponse20021Links.

        :return: The security of this InlineResponse20021Links.
        :rtype: str
        """
        return self._security

    @security.setter
    def security(self, security):
        """
        Sets the security of this InlineResponse20021Links.

        :param security: The security of this InlineResponse20021Links.
        :type: str
        """

        self._security = security

    @property
    def security_entries(self):
        """
        Gets the security_entries of this InlineResponse20021Links.

        :return: The security_entries of this InlineResponse20021Links.
        :rtype: str
        """
        return self._security_entries

    @security_entries.setter
    def security_entries(self, security_entries):
        """
        Sets the security_entries of this InlineResponse20021Links.

        :param security_entries: The security_entries of this InlineResponse20021Links.
        :type: str
        """

        self._security_entries = security_entries

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, InlineResponse20021Links):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
